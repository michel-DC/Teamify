#!/usr/bin/env node

/**
 * Script de pr√©-build pour Railway
 * S'assure que Prisma Client est correctement g√©n√©r√© avant le build Next.js
 */

import { execSync } from "child_process";
import fs from "fs";
import path from "path";
import { fileURLToPath } from "url";

// Obtenir __dirname en ES modules
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

console.log("üîß Pr√©paration du build Railway...");

try {
  // V√©rifier que Prisma est install√©
  console.log("üì¶ V√©rification de Prisma...");
  execSync("npx prisma --version", { stdio: "inherit" });

  // G√©n√©rer le client Prisma
  console.log("üî® G√©n√©ration du client Prisma...");
  execSync("npx prisma generate", { stdio: "inherit" });

  // V√©rifier que le client a √©t√© g√©n√©r√©
  const prismaClientPath = path.join(
    process.cwd(),
    "node_modules/.prisma/client"
  );
  if (!fs.existsSync(prismaClientPath)) {
    throw new Error("Prisma Client n'a pas √©t√© g√©n√©r√© correctement");
  }

  console.log("‚úÖ Prisma Client g√©n√©r√© avec succ√®s");
  console.log("üöÄ Pr√™t pour le build Next.js");
} catch (error) {
  console.error("‚ùå Erreur lors de la pr√©paration du build:", error.message);
  process.exit(1);
}
